---
import BaseLayout from "@/layouts/BaseLayout.astro";
import { app } from "../firebase/server";
import { getAuth } from "firebase-admin/auth";

/* Check if the user is authenticated */
const auth = getAuth(app);
if (Astro.cookies.has("__session")) {
  const sessionCookie = Astro.cookies.get("__session")?.value;
  if (sessionCookie) {
    const decodedCookie = await auth.verifySessionCookie(sessionCookie);
    if (decodedCookie) {
      return Astro.redirect("/dashboard");
    }
  }
}
---

<BaseLayout>
  <div class="grid gap-8">
    <h1>Sign in</h1>
    <p>New here? <a href="/register">Create an account</a></p>
    <form action="/api/auth/signin" method="post">
      <label for="email" for="email">Email</label>
      <input type="email" name="email" id="email" />
      <label for="password">Password</label>
      <input type="password" name="password" id="password" />
      <button type="submit">Login</button>
    </form>
    <button id="google">Sign in with Google</button>
  </div>

  <script>
    import {
      getAuth,
      inMemoryPersistence,
      signInWithEmailAndPassword,
      GoogleAuthProvider,
      signInWithPopup,
    } from "firebase/auth";
    import { app } from "../firebase/config";

    const auth = getAuth(app);
    // This will prevent the browser from storing session data
    auth.setPersistence(inMemoryPersistence);

    const form = document.querySelector("form") as HTMLFormElement;
    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      const formData = new FormData(form);
      const email = formData.get("email")?.toString();
      const password = formData.get("password")?.toString();

      if (!email || !password) {
        return;
      }
      const userCredential = await signInWithEmailAndPassword(
        auth,
        email,
        password
      );
      const idToken = await userCredential.user.getIdToken();
      const response = await fetch("/api/auth/signin", {
        method: "GET",
        headers: {
          Authorization: `Bearer ${idToken}`,
        },
      });
      console.log(await response.json());

      if (response.redirected) {
        window.location.assign(response.url);
      }
    });
    const googleSignin = document.querySelector("#google") as HTMLButtonElement;
    googleSignin.addEventListener("click", async () => {
      const provider = new GoogleAuthProvider();
      const userCredential = await signInWithPopup(auth, provider);
      const idToken = await userCredential.user.getIdToken();
      const res = await fetch("/api/auth/signin", {
        headers: {
          Authorization: `Bearer ${idToken}`,
        },
      });
      console.log(await res.json());
      if (res.redirected) {
        window.location.assign(res.url);
      }
    });
  </script>
</BaseLayout>
